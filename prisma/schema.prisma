generator client {
  provider = "cargo prisma"
  output   = "../src/prisma.rs"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  username  String    @unique
  bio       String?
  image     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  followedBy          UserFollows[]         @relation("followedBy")
  following           UserFollows[]         @relation("following")
  UserFavoriteArticle UserFavoriteArticle[]
  Article             Article[]
  Comment             Comment[]
}

model UserFollows {
  followedBy   User @relation("followedBy", fields: [followedById], references: [id])
  followedById Int
  following    User @relation("following", fields: [followingId], references: [id])
  followingId  Int

  @@id([followingId, followedById])
}

model UserFavoriteArticle {
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  article   Article @relation(fields: [articleId], references: [id])
  articleId Int

  @@id([userId, articleId])
}

model Article {
  id             Int       @id @default(autoincrement())
  slug           String    @unique
  title          String
  description    String
  body           String
  favoritesCount Int       @default(0)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  deletedAt      DateTime?

  author   User @relation(fields: [authorId], references: [id])
  authorId Int

  tags        ArticleTag[]
  favoritedBy UserFavoriteArticle[]
  Comment     Comment[]
}

model ArticleTag {
  id  Int    @id @default(autoincrement())
  tag String

  article   Article @relation(fields: [articleId], references: [id])
  articleId Int

  @@unique([articleId, tag])
}

model Comment {
  id        Int       @id @default(autoincrement())
  body      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  author    User    @relation(fields: [authorId], references: [id])
  authorId  Int
  article   Article @relation(fields: [articleId], references: [id])
  articleId Int
}
